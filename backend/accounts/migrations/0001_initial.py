# Generated by Django 5.2.3 on 2025-07-01 10:32

import accounts.utils.image_upload
import core.utils
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('image', models.ImageField(help_text='Upload your image...', upload_to=accounts.utils.image_upload.USER_DIRECTORY_PATH, validators=[core.utils.VALIDATE_IMAGE_EXTENSION, core.utils.VALIDATE_IMAGE_SIZE], verbose_name='Image')),
                ('user_id', models.CharField(db_index=True, editable=False, max_length=9, unique=True, validators=[django.core.validators.MinLengthValidator(9)], verbose_name='User ID')),
                ('username', models.CharField(db_index=True, help_text='Enter your username...', max_length=40, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='Username can only contain letters, numbers, and underscores.', regex='^[a-zA-Z0-9_]+$')], verbose_name='Username')),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('name', models.CharField(help_text='Enter your name...', max_length=60, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('email', models.EmailField(db_index=True, help_text='Enter your email...', max_length=80, unique=True, validators=[core.utils.VALIDATE_EMAIL, django.core.validators.MinLengthValidator(10)], verbose_name='Email')),
                ('number', models.CharField(db_index=True, help_text='Enter your number...', max_length=20, unique=True, validators=[core.utils.VALIDATE_PHONE_NUMBER, django.core.validators.MinLengthValidator(5)], verbose_name='Number')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], help_text='Enter your gender...', max_length=20, verbose_name='Gender')),
                ('birth_date', models.DateField(help_text='Enter your birth date...', verbose_name='Birth Date')),
                ('country', models.CharField(help_text='Enter your country', max_length=25, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Country')),
                ('signature', models.CharField(help_text='Enter your signature...', max_length=40, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Signature')),
                ('account_type', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], help_text='Enter your account type...', max_length=20, verbose_name='Account Type')),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], default=20, help_text='Enter your role...', verbose_name='Role')),
                ('terms_accepted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_block', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='accounts_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='accounts_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='ActiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='active_session', to='accounts.user')),
            ],
        ),
    ]
